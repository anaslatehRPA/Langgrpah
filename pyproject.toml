[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "langgraph-agent-template"
version = "0.1.0"
description = "A template for building LangGraph AI agents"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/yourusername/langgraph-agent-template"
repository = "https://github.com/yourusername/langgraph-agent-template"
documentation = "https://langgraph-agent-template.readthedocs.io"
keywords = ["langgraph", "ai", "agent", "template"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "Rag_graph"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.15"
langgraph = "^0.3.0"
langchain = "^0.3.0"
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"
python-dotenv = "^1.0.0"
click = "^8.1.0"
psycopg2-binary = {version = "^2.9.0", optional = true}
langsmith = ">=0.3.45"
langchain-google-genai = "^2.1.10"
langchain-core = "^0.3.75"
pandas = "^2.3.2"
pypdf2 = "^3.0.1"
faiss-cpu = "^1.12.0"
langchain-community = "^0.3.29"
chromadb = "^1.0.20"
flask = "^2.3.0"

[tool.poetry.extras]
postgres = ["psycopg2-binary"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pre-commit = "^3.3.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.0"
mkdocs-material = "^9.2.0"
mkdocstrings = "^0.22.0"

[tool.poetry.scripts]
langgraph-template = "your_graph_name.cli:main"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=Rag_graph --cov-report=html --cov-report=term-missing"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
